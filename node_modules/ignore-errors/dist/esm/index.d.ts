declare type LiteralMatchType = any;
declare type MatchType = Record<any, LiteralMatchType> | Map<any, LiteralMatchType>;
declare type ArgsType = [MatchType] | [string, LiteralMatchType];
declare type IgnoreFnType = (val: any) => void;
export default function ignore(...args: ArgsType): IgnoreFnType;
export declare const ignoreMessage: (val: LiteralMatchType) => IgnoreFnType;
export declare const ignoreName: (val: LiteralMatchType) => IgnoreFnType;
export declare const ignoreStatus: (val: LiteralMatchType) => IgnoreFnType;
export declare const ignoreReason: (val: LiteralMatchType) => IgnoreFnType;
export declare const ignoreCode: (val: LiteralMatchType) => IgnoreFnType;
export declare const ignoreAny: (...ignoreFns: Array<IgnoreFnType>) => (err: any) => void;
export {};
